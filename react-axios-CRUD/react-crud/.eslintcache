[{"D:\\react-axios-CRUD\\react-crud\\src\\index.js":"1","D:\\react-axios-CRUD\\react-crud\\src\\components\\App.js":"2","D:\\react-axios-CRUD\\react-crud\\src\\components\\Header.js":"3","D:\\react-axios-CRUD\\react-crud\\src\\components\\ContactList.js":"4","D:\\react-axios-CRUD\\react-crud\\src\\components\\AddContact.js":"5","D:\\react-axios-CRUD\\react-crud\\src\\api\\contacts.js":"6","D:\\react-axios-CRUD\\react-crud\\src\\components\\ContactCard.js":"7","D:\\react-axios-CRUD\\react-crud\\src\\components\\EditContact.js":"8"},{"size":208,"mtime":1612509406000,"results":"9","hashOfConfig":"10"},{"size":2756,"mtime":1618240514404,"results":"11","hashOfConfig":"10"},{"size":231,"mtime":1612509406000,"results":"12","hashOfConfig":"10"},{"size":507,"mtime":1612509406000,"results":"13","hashOfConfig":"10"},{"size":1280,"mtime":1612509406000,"results":"14","hashOfConfig":"10"},{"size":102,"mtime":1618226933324,"results":"15","hashOfConfig":"10"},{"size":983,"mtime":1618239238528,"results":"16","hashOfConfig":"10"},{"size":1436,"mtime":1618240026519,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ep69gn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\react-axios-CRUD\\react-crud\\src\\index.js",[],["37","38"],"D:\\react-axios-CRUD\\react-crud\\src\\components\\App.js",["39","40","41"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { uuid } from \"uuidv4\";\nimport  api  from \"../api/contacts\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport EditContact from \"./EditContact\";\nimport ContactDetail from \"./AddContact\";\n\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState([]);\n\n  //retrieve contacts\nconst retrieveContacts = async () => {\n  const response = await api.get(\"/contacts\");\n  console.log(response)\n}; \n\n  const addContactHandler = async(contact) => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      ...contact,\n    }\n    const response = await api.post(\"/contacts\", request)\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async(contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact)\n    const{id, name, email} = response.data;\n    setContacts(contacts.map(contact=> {\n      return contact.id === id ? {...response.data} : contact\n\n    }));\n  }\n\n  const removeContactHandler = async(id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n\n  useEffect(() => {\n    //const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    //if (retriveContacts) setContacts(retriveContacts);\n    const getAllContacts = async()=>{\n      const allContacts = await retrieveContacts();\n      if(allContacts) setContacts(allContacts);\n    };\n    getAllContacts();\n  }, []);\n\n  useEffect(() => {\n    // localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"ui container\">\n       <Router>\n       <Header />\n       <Switch>\n       <Route \n          path = \"/\">\n            exact\n            render={(props) => (\n              <ContactList\n              {...props} \n              contacts={contacts}\n              getContactId={removeContactHandler}\n              />\n            )}\n            </Route>\n            <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddContact {...props} addContactHandler={addContactHandler}/>\n\n            )}\n            />\n            <Route \n            path=\"/edit\"\n            render={(props) => (\n              <EditContact {...props} updateContactHandler = {updateContactHandler}/>\n            )}\n            />\n            <Route path=\"/contact/:id\" component={ContactDetail} />\n       </Switch>\n       </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\react-axios-CRUD\\react-crud\\src\\components\\Header.js",[],"D:\\react-axios-CRUD\\react-crud\\src\\components\\ContactList.js",[],"D:\\react-axios-CRUD\\react-crud\\src\\components\\AddContact.js",[],"D:\\react-axios-CRUD\\react-crud\\src\\api\\contacts.js",[],"D:\\react-axios-CRUD\\react-crud\\src\\components\\ContactCard.js",[],["42","43"],"D:\\react-axios-CRUD\\react-crud\\src\\components\\EditContact.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":14,"column":9,"nodeType":"50","messageId":"51","endLine":14,"endColumn":26},{"ruleId":"48","severity":1,"message":"52","line":35,"column":15,"nodeType":"50","messageId":"51","endLine":35,"endColumn":19},{"ruleId":"48","severity":1,"message":"53","line":35,"column":21,"nodeType":"50","messageId":"51","endLine":35,"endColumn":26},{"ruleId":"44","replacedBy":"54"},{"ruleId":"46","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'LOCAL_STORAGE_KEY' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'email' is assigned a value but never used.",["56"],["57"],"no-global-assign","no-unsafe-negation"]